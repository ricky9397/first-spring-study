<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper 
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" 
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.project.gymcarry.dao.MemberDao">

	<!-- 멤버로그인 -->
	<!-- 로그인값은 멤버 캐리 상관없이 SessionDto로 받아오기 -->
	<select id="memberLogin" parameterType="String"
		resultType="com.project.gymcarry.member.SessionDto">
		select * from member where mememail=#{param1} and
		mempw=#{param2}
	</select>

	<!-- 캐리로그인 -->
	<select id="carryLogin" parameterType="String"
		resultType="com.project.gymcarry.member.SessionDto">
		select * from carry where cremail=#{param1} and
		crpw=#{param2}
	</select>


	<!-- 로그인시 joinkey_status != 1인 경우(이메일 인증되지 않은 계정) 로그인 제한 -->
	<select id="memberjoinkeycheck" parameterType="String"
		resultType="com.project.gymcarry.member.MemberDto">
		select * from member where mememail = #{param1} and mempw =
		#{param2}
	</select>

	<!-- 로그인시 joinkey_status != 1인 경우(이메일 인증되지 않은 계정) 로그인 제한 -->
	<select id="carryjoinkeycheck" parameterType="String"
		resultType="com.project.gymcarry.carry.CarryDto">
		select * from carry where cremail = #{param1} and crpw =
		#{param2}
	</select>


	<!-- 멤버회원가입 -->
	<insert id="insertMember"
		parameterType="com.project.gymcarry.member.MemberDto"
		useGeneratedKeys="true" keyProperty="memidx">
		insert into
		member(mememail, mempw,
		memname, memnick, memphone, membirth,
		memgender, joinkey,
		joinkey_status)
		values
		(#{mememail},#{mempw},#{memname},#{memnick},#{memphone},#{membirth},#{memgender},#{joinkey},
		'0')
	</insert>


	<!-- 캐리회원가입 -->
	<insert id="insertCarry"
		parameterType="com.project.gymcarry.carry.CarryJoinDto"
		useGeneratedKeys="true" keyProperty="cridx">
		insert into carry(cremail,
		crpw,
		crname, crnick, crgender, crphone, joinkey,
		joinkey_status)
		values
		(#{cremail},#{crpw},#{crname},#{crnick},#{crgender},#{crphone},#{joinkey},
		'0')
	</insert>

	<!-- 멤버 회원가입시 이메일 중복 검사 -->
	<select id="memberemailCheck" parameterType="String"
		resultType="int">
		select count(*) from member where mememail = #{mememail}
	</select>

	<!-- 캐리 회원가입시 이메일 중복 검사 -->
	<select id="carryemailCheck" parameterType="String"
		resultType="int">
		select count(*) from carry where cremail = #{cremail}
	</select>

	<!-- 멤버 회원가입 이메일 인증 -->
	<!-- joinkey -->
	<update id="GetJoinkey" parameterType="String">
		update member set joinkey
		= #{param2} where mememail = #{param1}
	</update>

	<update id="cr_GetJoinkey" parameterType="String">
		update carry set
		joinkey
		= #{param2} where cremail = #{param1}
	</update>


	<!-- joinkey_status = 0 (미인증상태) / 1 (인증상태) -->
	<update id="alterjoinkey" parameterType="Map">
		update member set
		joinkey_status = '1' where mememail = #{param1} and joinkey =
		#{param2}
	</update>

	<!-- joinkey_status = 0 (미인증상태) / 1 (인증상태) -->
	<update id="cr_alterjoinkey" parameterType="Map">
		update carry set
		joinkey_status = '1' where cremail = #{param1} and joinkey =
		#{param2}
	</update>


</mapper>